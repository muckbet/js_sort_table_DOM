{"version":3,"sources":["scripts/main.js"],"names":["headList","document","querySelector","headName","querySelectorAll","map","i","innerText","body","rows","cell","row","n","children","textContent","replace","addEventListener","e","sorted","target","closest","numOfColum","indexOf","sort","a","b","localeCompare","appendChild"],"mappings":";AAAA,aAUA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EARA,IAAMA,EAAWC,SAASC,cAAc,SAClCC,EAAW,EACZF,SAASG,iBAAiB,aAAaC,IAAI,SAAAC,GAAKA,OAAAA,EAAEC,YAEjDC,EAAOP,SAASC,cAAc,SAC9BO,EAAWD,EAAAA,EAAKJ,iBAAiB,OACjCM,EAAO,SAACC,EAAKC,GAAMD,OAAAA,EAAIE,SAASD,GAAGE,YAAYC,QAAQ,QAAS,KAEtEf,EAASgB,iBAAiB,QAAS,SAACC,GAC9BC,IACEC,EAASF,EAAEE,OAAOC,QAAQ,MAAMb,UAChCc,EAAalB,EAASmB,QAAQH,IAEhCE,GAAc,EACPZ,EAAKc,KAAK,SAACC,EAAGC,GACrBf,OAAAA,EAAKc,EAAGH,GAAeX,EAAKe,EAAGJ,KAExBZ,EAAKc,KAAK,SAACC,EAAGC,GACrBf,OAAAA,EAAKc,EAAGH,GAAYK,cAAchB,EAAKe,EAAGJ,OAEvChB,IAAI,SAAAC,GAAKE,OAAAA,EAAKmB,YAAYrB","file":"main.1ab91899.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst headList = document.querySelector('thead');\nconst headName = [\n  ...document.querySelectorAll('thead th')].map(i => i.innerText);\n\nconst body = document.querySelector('tbody');\nconst rows = [...body.querySelectorAll('tr')];\nconst cell = (row, n) => row.children[n].textContent.replace(/[$,]/g, '');\n\nheadList.addEventListener('click', (e) => {\n  let sorted;\n  const target = e.target.closest('th').innerText;\n  const numOfColum = headName.indexOf(target);\n\n  if (numOfColum >= 2) {\n    sorted = rows.sort((a, b) =>\n      cell(a, numOfColum) - (cell(b, numOfColum)));\n  } else {\n    sorted = rows.sort((a, b) =>\n      cell(a, numOfColum).localeCompare(cell(b, numOfColum)));\n  };\n  sorted.map(i => body.appendChild(i));\n});\n"]}